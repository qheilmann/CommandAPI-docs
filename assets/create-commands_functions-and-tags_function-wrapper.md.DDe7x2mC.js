import{_ as r,C as h,c as d,o as E,G as n,am as l,j as s,w as t,a as i}from"./chunks/framework.DEPJlf-V.js";const A=JSON.parse('{"title":"The FunctionWrapper","description":"","frontmatter":{"order":3,"authors":["JorelAli","DerEchtePilz","willkroboth"]},"headers":[],"relativePath":"create-commands/functions-and-tags/function-wrapper.md","filePath":"en/create-commands/functions-and-tags/function-wrapper.md","lastUpdated":1743375413000}'),o={name:"create-commands/functions-and-tags/function-wrapper.md"};function c(g,a,y,u,F,m){const e=h("TitleAnchor"),k=h("PluginTabsTab"),p=h("PluginTabs");return E(),d("div",null,[n(e,{anchor:"the-function-wrapper"},{default:t(()=>a[0]||(a[0]=[s("h1",{id:"the-function-wrapper",tabindex:"-1"},[i("The FunctionWrapper "),s("a",{class:"header-anchor",href:"#the-function-wrapper","aria-label":'Permalink to "The FunctionWrapper"'},"​")],-1)])),_:1}),a[6]||(a[6]=l("<p>The CommandAPI includes the <code>FunctionWrapper</code> class which is a wrapper for Minecraft&#39;s functions. It allows you to execute the commands that are represented by the respective <code>.mcfunction</code> file.</p><p>The <code>FunctionWrapper</code> class is an extension of the <code>SimpleFunctionWrapper</code> class. It is a <code>SimpleFunctionWrapper</code> which has been constructed from an existing command sender when a command is used. This means that the command sender has already been &quot;baked into&quot; the <code>FunctionWrapper</code> object, allowing you to run it without having to provide a command sender.</p>",2)),n(e,{anchor:"function-wrapper-methods"},{default:t(()=>a[1]||(a[1]=[s("h2",{id:"function-wrapper-methods",tabindex:"-1"},[i("FunctionWrapper methods "),s("a",{class:"header-anchor",href:"#function-wrapper-methods","aria-label":'Permalink to "FunctionWrapper methods"'},"​")],-1)])),_:1}),a[7]||(a[7]=l(`<p>The <code>FunctionWrapper</code> class has the following methods:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FunctionWrapper</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SimpleFunctionWrapper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Methods specific to this class</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> runAs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Entity </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Methods inherited from SimpleFunctionWrapper</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SimpleFunctionWrapper </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NamespacedKey </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SimpleFunctionWrapper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NamespacedKey </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Set&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NamespacedKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getFunctions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Set&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NamespacedKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CommandSender </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCommands</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    NamespacedKey </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>These methods allow you to interact with the Minecraft function that this class wraps.</p>`,3)),n(e,{anchor:"run"},{default:t(()=>a[2]||(a[2]=[s("h3",{id:"run",tabindex:"-1"},[s("code",null,"run()"),i(),s("a",{class:"header-anchor",href:"#run","aria-label":'Permalink to "`run()`"'},"​")],-1)])),_:1}),a[8]||(a[8]=l('<div class="danger custom-block"><p class="custom-block-title">run() support in 1.20.3+</p><p>As of CommandAPI 9.3.0 (compatible with Minecraft versions 1.20.3 and 1.20.4), calling <code>run()</code> will always return a value of <code>1</code>, regardless of whether the command succeeds, fails, or returns a result.</p></div><p>The <code>run()</code> method runs the function. The command executor that runs this function is the command executor that was used to retrieve it. For example, if a player in-game populated this argument, then the player will be filled in for <code>@p</code> and the player&#39;s location would be used for things such as <code>~ ~ ~</code>:</p>',2)),n(p,{sharedStateKey:"tabs-2"},{default:t(()=>[n(k,{label:"Java"},{default:t(()=>a[3]||(a[3]=[s("div",{class:"language-java vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"java"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"new"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," CommandAPICommand"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"runfunc"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"withArguments"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"new"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," FunctionArgument"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"function"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"executes"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"((sender, args) "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"->"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"        FunctionWrapper"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[] functions "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ("),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"FunctionWrapper"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"[]) args."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"get"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"function"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},");")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"        for"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (FunctionWrapper function "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},":"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," functions) {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            function."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"run"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"(); "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// The command executor in this case is 'sender'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    })")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"register"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"();")])])])],-1)])),_:1}),n(k,{label:"Kotlin"},{default:t(()=>a[4]||(a[4]=[s("div",{class:"language-kotlin vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"kotlin"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code",tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"CommandAPICommand"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"runfunc"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"withArguments"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"FunctionArgument"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"function"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"))")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"executes"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"CommandExecutor"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," { _, args "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"->")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"        val"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," functions "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," args["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"function"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"] "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"as"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," Array"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"FunctionWrapper"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"        for"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," (function "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"in"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," functions) {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            function."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"run"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// The command executor in this case is 'sender'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    })")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"register"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()")])])])],-1)])),_:1})]),_:1}),n(e,{anchor:"run-as-entity"},{default:t(()=>a[5]||(a[5]=[s("h3",{id:"run-as-entity",tabindex:"-1"},[s("code",null,"runAs(Entity)"),i(),s("a",{class:"header-anchor",href:"#run-as-entity","aria-label":'Permalink to "`runAs(Entity)`"'},"​")],-1)])),_:1}),a[9]||(a[9]=s("div",{class:"danger custom-block"},[s("p",{class:"custom-block-title"},"runAs(Entity) support in 1.20.3+"),s("p",null,[i("As of CommandAPI 9.3.0 (compatible with Minecraft versions 1.20.3 and 1.20.4), calling "),s("code",null,"runAs(Entity)"),i(" will always return a value of "),s("code",null,"1"),i(", regardless of whether the command succeeds, fails, or returns a result.")])],-1)),a[10]||(a[10]=s("p",null,[i("The "),s("code",null,"runAs(Entity)"),i(" is the same as the "),s("code",null,"run()"),i(" method, but it allows you to change the command executor to another entity.")],-1))])}const C=r(o,[["render",c]]);export{A as __pageData,C as default};
