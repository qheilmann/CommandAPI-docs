import{_ as h,C as p,c as o,o as k,G as e,j as i,am as l,w as t,a}from"./chunks/framework.DEPJlf-V.js";const C=JSON.parse('{"title":"Single command conversion","description":"","frontmatter":{"order":2,"authors":["JorelAli"]},"headers":[],"relativePath":"user-setup/command-conversion/single-command.md","filePath":"en/user-setup/command-conversion/single-command.md","lastUpdated":1743375413000}'),d={name:"user-setup/command-conversion/single-command.md"},r={style:{height:"0",color:"rgba(0,0,0,0%)",position:"relative",top:"32px"}},c={style:{height:"0",color:"rgba(0,0,0,0%)",position:"relative",top:"32px"}};function E(m,s,g,y,u,F){const n=p("TitleAnchor");return k(),o("div",null,[e(n,{anchor:"single-command-conversion"},{default:t(()=>s[0]||(s[0]=[i("h1",{id:"single-command-conversion",tabindex:"-1"},[a("Single command conversion "),i("a",{class:"header-anchor",href:"#single-command-conversion","aria-label":'Permalink to "Single command conversion"'},"​")],-1)])),_:1}),s[5]||(s[5]=i("p",null,[a("Often, you don't want to convert "),i("em",null,"every single command"),a(" that a plugin declares, and instead you only want to convert a few commands that a plugin has.")],-1)),s[6]||(s[6]=i("p",null,"The CommandAPI has two ways of doing this:",-1)),s[7]||(s[7]=i("ul",null,[i("li",null,[a("Plugin command conversion: This converts a command which is declared in a plugin's "),i("code",null,"plugin.yml"),a(" file")]),i("li",null,[a("Arbitrary command conversion: This converts a command which is not declared in a plugin's "),i("code",null,"plugin.yml"),a(" file")])],-1)),e(n,{anchor:"plugin-command-conversion"},{default:t(()=>s[1]||(s[1]=[i("h2",{id:"plugin-command-conversion",tabindex:"-1"},[a("Plugin command conversion "),i("a",{class:"header-anchor",href:"#plugin-command-conversion","aria-label":'Permalink to "Plugin command conversion"'},"​")],-1)])),_:1}),s[8]||(s[8]=i("p",null,[a("To convert a single command, you need to first populate the "),i("code",null,"config.yml"),a(" with the name of the plugin and commands to be converted. To illustrate this, we'll use an example:")],-1)),i("div",r,[e(n,{anchor:"example-converting-plugin-commands"},{default:t(()=>s[2]||(s[2]=[i("h3",{id:"example-converting-plugin-commands",class:"example-title-anchor",style:{"-webkit-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none"}},[a("Example – Converting plugin commands "),i("a",{class:"header-anchor",href:"#example-converting-plugin-commands"},"​")],-1)])),_:1})]),s[9]||(s[9]=l(`<div class="tip custom-block"><p class="custom-block-title">Example – Converting plugin commands</p><p>Say we&#39;re using <a href="https://www.spigotmc.org/resources/essentialsx.9089/" target="_blank" rel="noreferrer">EssentialsX</a> on our server and we want to be able to use <code>/afk</code> and <code>/hat</code> in command blocks. This would allow us to use (for example) the following commands in command blocks:</p><div class="language-mccmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mccmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">execute</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> as</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> @p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> afk</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">execute</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> as</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> @p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hat</span></span></code></pre></div><p>To do this, we need to add <code>Essentials</code> to our <code>config.yml</code> file, and include the commands <code>afk</code> and <code>hat</code> as the commands to be converted from the Essentials plugin. This would then make our <code>config.yml</code> file look like this:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">verbose-outputs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">create-dispatcher-json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">plugins-to-convert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Essentials</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">hat</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">afk</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title"><strong>Developer&#39;s Note:</strong></p><p>Note that the commands <code>hat</code> and <code>afk</code> are used, as opposed to an alias such as <code>head</code>. The CommandAPI is only able to convert plugin commands that are declared in a plugin&#39;s <code>plugin.yml</code> file. For example, if we take a look at the EssentialsX <code>plugin.yml</code> file, we can see the commands <code>afk</code> and <code>hat</code> have been declared and thus, are the commands which must be used in the CommandAPI&#39;s <code>config.yml</code> file:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Essentials</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">com.earth2me.essentials.Essentials</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.18.0.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">website</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://tiny.cc/EssentialsCommands</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Provides an essential, core set of commands for Bukkit.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">softdepend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Vault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">LuckPerms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">authors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Zenexer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ementalo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Aelux</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Brettflan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">KimKandor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">snowleo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ceulemans</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Xeology</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">KHobbits</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">md_5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Iaccidentally</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">drtshock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">vemacs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SupaHam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">md678685</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">api-version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.13&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">commands</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  afk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Marks you as away-from-keyboard.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    usage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/&lt;command&gt; [player/message...]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    aliases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">eafk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">away</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">eaway</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # (other config options omitted)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  hat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Get some cool new headgear.</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    usage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/&lt;command&gt; [remove]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    aliases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ehat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ehead</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (other config options omitted)</span></span></code></pre></div></div></div>`,1)),e(n,{anchor:"arbitrary-command-conversion"},{default:t(()=>s[3]||(s[3]=[i("h2",{id:"arbitrary-command-conversion",tabindex:"-1"},[a("Arbitrary command conversion "),i("a",{class:"header-anchor",href:"#arbitrary-command-conversion","aria-label":'Permalink to "Arbitrary command conversion"'},"​")],-1)])),_:1}),s[10]||(s[10]=l('<p>Some commands which are registered by plugins aren’t present in the plugin&#39;s <code>plugin.yml</code> file. Due to this, the CommandAPI can’t link a command to its respective plugin for command conversion. In order to deal with this, the CommandAPI can link arbitrary commands via the <code>other-commands-to-convert</code> option in the CommandAPI&#39;s <code>config.yml</code> file.</p><p>This can be used for any of the following (and more):</p><ul><li>Commands created using <a href="https://github.com/SkriptLang/Skript" target="_blank" rel="noreferrer">Skript</a></li><li>Commands created using <a href="https://dev.bukkit.org/projects/mycommand" target="_blank" rel="noreferrer">MyCommand</a></li><li>Commands which are not registered in a <code>plugin.yml</code>, such as <a href="https://dev.bukkit.org/projects/worldedit" target="_blank" rel="noreferrer">WorldEdit</a> commands</li></ul><p>To add commands to be converted, simply add them under the <code>other-command-to-convert</code> section in the CommandAPI&#39;s <code>config.yml</code>.</p>',4)),i("div",c,[e(n,{anchor:"example-converting-arbitrary-commands"},{default:t(()=>s[4]||(s[4]=[i("h3",{id:"example-converting-arbitrary-commands",class:"example-title-anchor",style:{"-webkit-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none"}},[a("Example – Converting arbitrary commands "),i("a",{class:"header-anchor",href:"#example-converting-arbitrary-commands"},"​")],-1)])),_:1})]),s[11]||(s[11]=l(`<div class="tip custom-block"><p class="custom-block-title">Example – Converting arbitrary commands</p><p>In this example, we want to convert the <code>//set</code> command from WorldEdit, as well as a custom command <code>/mycommand</code>. Note that since WorldEdit&#39;s <code>//set</code> command has two forward slashes, we ignore the first one (because that is the symbol used to start commands), but must make sure that we include the second one as that is part of WorldEdit&#39;s command syntax. This is the following <code>config.yml</code> that you would need:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">verbose-outputs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">create-dispatcher-json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">plugins-to-convert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">skip-sender-proxy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">other-commands-to-convert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/set</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mycommand</span></span></code></pre></div></div>`,1))])}const f=h(d,[["render",E]]);export{C as __pageData,f as default};
