import{_ as o,C as r,c as n,o as s,G as m,am as i,w as d,j as t,a as c}from"./chunks/framework.DEPJlf-V.js";const y=JSON.parse('{"title":"Testing Commands","description":"","frontmatter":{"order":1,"authors":["willkroboth"]},"headers":[],"relativePath":"test/intro.md","filePath":"en/test/intro.md","lastUpdated":1743375413000}'),l={name:"test/intro.md"};function p(h,e,u,g,f,_){const a=r("TitleAnchor");return s(),n("div",null,[m(a,{anchor:"testing-commands"},{default:d(()=>e[0]||(e[0]=[t("h1",{id:"testing-commands",tabindex:"-1"},[c("Testing Commands "),t("a",{class:"header-anchor",href:"#testing-commands","aria-label":'Permalink to "Testing Commands"'},"â€‹")],-1)])),_:1}),e[1]||(e[1]=i('<p>When developing large projects, it is good practice to add automated tests for your code. This section of the documentation describes how to use the <code>commandapi-bukkit-test-toolkit</code> dependency along with <a href="https://github.com/MockBukkit/MockBukkit" target="_blank" rel="noreferrer">MockBukkit</a> and <a href="https://junit.org/junit5/" target="_blank" rel="noreferrer">JUnit</a> to test the usage of commands registered with the CommandAPI.</p><p>For a big-picture view, you can find example projects that include automated tests in the <a href="https://github.com/CommandAPI/CommandAPI/tree/master/examples" target="_blank" rel="noreferrer">CommandAPI GitHub repository</a>.</p><div class="danger custom-block"><p class="custom-block-title">Developer&#39;s Note:</p><p>Many methods have not yet been implemented in the test toolkit. Most notably, only <a href="./../create-commands/arguments/types/primitive-arguments">primitive arguments</a>, <a href="./../create-commands/arguments/types/string-arguments">String arguments</a>, <a href="./../create-commands/arguments/types/literal/literal-arguments">literal arguments</a>, and the <a href="./../create-commands/arguments/types/ranged-arguments"><code>IntegerRangeArgument</code></a> are fully implemented. The <a href="./../create-commands/arguments/types/entities-arguments"><code>EntitySelectorArgument</code>, <code>PlayerArgument</code>, and <code>OfflinePlayerArgument</code></a> should mostly work, though <a href="https://minecraft.wiki/w/Target_selectors#Target_selector_arguments" target="_blank" rel="noreferrer">target selector arguments</a> (e.g. <code>@e[type=pig]</code>) are not yet implemented.</p><p>If a test ends up calling a method that has not yet been implemented, an <code>UnimplementedMethodException</code> will be thrown, causing the test to fail. If you see an <code>UnimplementedMethodException</code>, please tell us about it with a <a href="https://github.com/CommandAPI/CommandAPI/issues" target="_blank" rel="noreferrer">GitHub Issue</a> or a message in the CommandAPI Discord. Pull requests are also always welcome!</p><p>In the short term, you can try to resolve an <code>UnimplementedMethodException</code> by implementing the method yourself. The process for doing that is described <a href="./load-mock-commandapi#loading-a-custom-commandapi-platform-implementation">here</a>.</p></div>',3))])}const b=o(l,[["render",p]]);export{y as __pageData,b as default};
