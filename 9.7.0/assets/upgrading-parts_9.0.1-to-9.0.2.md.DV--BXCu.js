import{_ as t,C as e,c as n,o as l,G as r,am as h,w as p,j as i,a as o}from"./chunks/framework.DAr4A1sI.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"upgrading-parts/9.0.1-to-9.0.2.md","filePath":"en/upgrading-parts/9.0.1-to-9.0.2.md","lastUpdated":1742050500000}'),d={name:"upgrading-parts/9.0.1-to-9.0.2.md"};function k(g,s,c,u,E,m){const a=e("TitleAnchor");return l(),n("div",null,[r(a,{anchor:"multi-literal-argument-and-literal-argument-changes"},{default:p(()=>s[0]||(s[0]=[i("h3",{id:"multi-literal-argument-and-literal-argument-changes",tabindex:"-1"},[o("MultiLiteralArgument and LiteralArgument changes "),i("a",{class:"header-anchor",href:"#multi-literal-argument-and-literal-argument-changes","aria-label":'Permalink to "MultiLiteralArgument and LiteralArgument changes"'},"â€‹")],-1)])),_:1}),s[1]||(s[1]=h(`<p>In previous versions, the ability has been introduced to access arguments by their node names. However, while this was possible for every other argument, it wasn&#39;t possible for <code>MultiLiteralArgument</code>s. This was now changed because the values from the <code>MultiLiteralArgument</code> are included in the <a href="./../create-commands/arguments/command-arguments"><code>CommandArguments</code></a> of a command.</p><p>Therefore, the current constructor has been deprecated and the new one should be used:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark has-diff vp-code" tabindex="0"><code><span class="line diff remove"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withArguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MultiLiteralArgument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;survival&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;creative&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;adventure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;spectator&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span></span>
<span class="line"></span>
<span class="line diff add"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">withArguments</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MultiLiteralArgument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gamemodes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, List.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;survival&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;creative&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;adventure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;spectator&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))) </span></span></code></pre></div><p>Because it is possible to list <code>LiteralArgument</code>s in the <a href="./../create-commands/arguments/command-arguments"><code>CommandArguments</code></a> of a command, there was also an additional constructor added to the <code>LiteralArgument</code> class. The other one is not deprecated.</p><p>Now, the <code>LiteralArgument</code> class contains two possible constructors:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LiteralArgument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String literal) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Recommended if the literal is not listed</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LiteralArgument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String nodeName, String literal)</span></span></code></pre></div>`,6))])}const v=t(d,[["render",k]]);export{y as __pageData,v as default};
