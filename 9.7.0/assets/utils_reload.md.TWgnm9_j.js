import{_ as o,C as r,c as h,o as d,G as a,am as t,j as i,w as n,a as l}from"./chunks/framework.DAr4A1sI.js";const b=JSON.parse('{"title":"Plugin reloading","description":"","frontmatter":{"order":2,"authors":["JorelAli"]},"headers":[],"relativePath":"utils/reload.md","filePath":"en/utils/reload.md","lastUpdated":1742050500000}'),p={name:"utils/reload.md"},k={style:{height:"0",color:"rgba(0,0,0,0%)",position:"relative",top:"32px"}};function g(c,s,u,m,E,y){const e=r("TitleAnchor");return d(),h("div",null,[a(e,{anchor:"plugin-reloading"},{default:n(()=>s[0]||(s[0]=[i("h1",{id:"plugin-reloading",tabindex:"-1"},[l("Plugin reloading "),i("a",{class:"header-anchor",href:"#plugin-reloading","aria-label":'Permalink to "Plugin reloading"'},"​")],-1)])),_:1}),s[2]||(s[2]=t('<p>Formally, the CommandAPI <strong>does not</strong> support plugin reloading. This includes but is not limited to:</p><ul><li>The <code>/reload</code> command which reloads all plugins on the server</li><li>Plugin reloading plugins, such as <a href="https://dev.bukkit.org/projects/plugman" target="_blank" rel="noreferrer">PlugMan</a></li><li>Any form of plugin enabling/disabling process for plugins which register commands via the CommandAPI</li></ul><p>In general, using the <code>/reload</code> command is <em>not advised</em>. Here&#39;s some useful resources from various Bukkit/Spigot/Paper developers:</p><ul><li>Maddy Miller (WorldEdit creator): <ul><li><a href="https://madelinemiller.dev/blog/problem-with-reload/" target="_blank" rel="noreferrer">Why you should never /reload on Spigot, Bukkit, and Paper</a></li></ul></li><li>Bukkit Forums: <ul><li><a href="https://bukkit.org/threads/is-reload-that-bad.129514/" target="_blank" rel="noreferrer">Is /reload that bad</a></li><li><a href="https://bukkit.org/threads/petition-to-remove-the-reload-command.43212/" target="_blank" rel="noreferrer">Petition to remove the /reload command</a></li></ul></li><li>Spigot Forums: <ul><li><a href="https://www.spigotmc.org/threads/whats-with-the-reload-command.344458/" target="_blank" rel="noreferrer">What&#39;s with the /reload command?</a></li><li><a href="https://www.spigotmc.org/threads/lets-kill-reload-or-make-it-better.35611/" target="_blank" rel="noreferrer">Let&#39;s kill /reload, or make it better.</a></li></ul></li></ul><p>The CommandAPI is <em>not like normal Bukkit/Spigot/Paper plugins</em>. It directly accesses all of the nitty-gritty Vanilla Minecraft code to convert and expose Minecraft&#39;s internal command framework into a Bukkit-API friendly interface for you to use. As the CommandAPI hooks directly into Vanilla Minecraft code, and <code>/reload</code> is a Bukkit feature, using <code>/reload</code> can cause Vanilla Minecraft&#39;s internal system to become unstable. If you are having issues with <code>/reload</code>, seriously reconsider shutting your server down correctly and restarting it, instead of running <code>/reload</code>.</p><p>Despite this, there is one way to get reloading to work using the <code>onDisable()</code> method in your plugin. If you register a command in your <code>onLoad()</code> or <code>onEnable()</code> method, by unregistering the command in your <code>onDisable()</code> method, this allows the CommandAPI to properly register the command again when the server reloads.</p><div class="danger custom-block"><p class="custom-block-title">Developer&#39;s Note:</p><p>Despite the fact that you can do this, I cannot stress enough that <strong>this is not recommended</strong>, due to the fact that <strong>functions/tags in datapacks do not work with <code>/reload</code>, even if you unregister the command</strong>.</p></div>',7)),i("div",k,[a(e,{anchor:"example-allowing-a-command-to-work-with-reload"},{default:n(()=>s[1]||(s[1]=[i("h3",{id:"example-allowing-a-command-to-work-with-reload",class:"example-title-anchor",style:{"-webkit-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none"}},[l("Example – Allowing a command to work with `/reload` "),i("a",{class:"header-anchor",href:"#example-allowing-a-command-to-work-with-reload"},"​")],-1)])),_:1})]),s[3]||(s[3]=t(`<div class="tip custom-block"><p class="custom-block-title">Example – Allowing a command to work with <code>/reload</code></p><p>In this example, we add support for reloading the server via <code>/reload</code> by unregistering the command in the <code>onDisable()</code> method. Note that force-unregistering is not required for this:</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MyPlugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JavaPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onEnable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CommandAPICommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ping&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">executes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((sender, args) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                sender.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Pong!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onDisable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        CommandAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unregister</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ping&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div>`,1))])}const w=o(p,[["render",g]]);export{b as __pageData,w as default};
